services:
  api:
    image: ghcr.io/skivdal/veridash-backend
    container_name: api
    command: webserver
    ports:
      - 127.0.0.1:8080:80
    environment:
      - "POSTGRES_CONN_STR=host=postgres dbname=veridash user=postgres password=postgres"
      - REDIS_HOST=valkey
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MINIO_HOST=s3.veridash.skivdal.no
      - MINIO_SECURE="true"
      - MINIO_USER=minioadmin
      - MINIO_PASS=minioadmin
      - MINIO_BUCKET=veridash
    restart: always

  worker:
    image: ghcr.io/skivdal/veridash-backend
    container_name: worker
    command: worker
    environment:
      - "POSTGRES_CONN_STR=host=postgres dbname=veridash user=postgres password=postgres"
      - REDIS_HOST=valkey
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MINIO_HOST=s3.veridash.skivdal.no
      - MINIO_SECURE="true"
      - MINIO_USER=minioadmin
      - MINIO_PASS=minioadmin
      - MINIO_BUCKET=veridash
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    image: ghcr.io/skivdal/veridash-frontend
    container_name: frontend
    ports:
      - 127.0.0.1:3000:3000
    restart: always

  postgres:  # TODO: load schema
    image: docker.io/postgres:14.1-alpine
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  valkey:
    image: docker.io/valkey/valkey:7-alpine
    container_name: valkey
    restart: always

  minio:  # TODO: make bucket
    image: docker.io/minio/minio:RELEASE.2024-08-03T04-33-23Z
    container_name: minio
    volumes:
      - /data/minio:/data
    restart: always
    ports:
      - 127.0.0.1:9000:9000
      - 127.0.0.1:9001:9001
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - "MINIO_ROOT_PASSWORD=minioadmin"


volumes:
  postgres:

